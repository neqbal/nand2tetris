// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM512.hdl
/**
 * Memory of 512 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    DMux8Way(in = load, sel = address[6..8], a = a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    RAM64(in = in, load=a, address = address[0..5], out = ram640);
    RAM64(in = in, load=b, address = address[0..5], out = ram641);
    RAM64(in = in, load=c, address = address[0..5], out = ram642);
    RAM64(in = in, load=d, address = address[0..5], out = ram643);
    RAM64(in = in, load=e, address = address[0..5], out = ram644);
    RAM64(in = in, load=f, address = address[0..5], out = ram645);
    RAM64(in = in, load=g, address = address[0..5], out = ram646);
    RAM64(in = in, load=h, address = address[0..5], out = ram647);

    Mux8Way16(a=ram640, b=ram641, c=ram642, d=ram643, e=ram644, f=ram645, g=ram646, h=ram647, sel = address[6..8], out = out);
    
}
