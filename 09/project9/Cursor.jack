class Cursor {

    field int x, y, x1, y1;
    field Memory memAddress;
    constructor Cursor new(int ax, int ay, int ax1, int ay1) {
        let x = ax;
        let y = ay;
        let x1 = ax1;
        let y1 = ay1;
        do draw();
        return this;
    }

    method void moveUp() {
        if(y > 0) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x1, y1);
            if(y=7) {let y = y - 7;}
            else {let y = y - 8;}
            let y1 = y1 - 8;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x1, y1);
        }
        return;
    }

    method void moveDown() {
        if(y < 247) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x1, y1);
            let y = y + 8;
            let y1 = y1 + 8;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x1, y1);
        }
        return;
    }

    method void moveLeft() {
        if(x > 0) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x1, y1);

            if(x = 7) {let x = x - 7;}
            else {let x = x - 8;}
    
            let x1 = x1 - 8;

            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x1, y1);
        }
        return;
    }

    method void moveRight() {
        if(x < 503) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x1, y1);
            let x = x + 8;
            let x1 = x1 + 8;



            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x1, y1);
        }
        return;
    }
    
    method void makebox() {
        if (x < 505) {

            do Screen.setColor(true);
            do Screen.drawRectangle(x,y, x1, y1);

            let x = x + 8;
            let x1 = x1 + 8;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x1, y1);

        }
        return;
    }

    method void draw() {
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x1, y1);
        return;
    }
}