function Game.begin 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 2
pop this 4
push constant 2048
call Array.new 1
pop this 0
push constant 2048
call Array.new 1
pop this 1
push constant 2048
call Array.new 1
pop this 3
push constant 2048
call Array.new 1
pop this 2
push pointer 0
push argument 0
push argument 1
call Game.genstart 3
pop temp 0
push pointer 0
return
function Game.genstart 3
push argument 0
pop pointer 0
push constant 0
pop local 0
push argument 1
pop this 0
push argument 2
pop this 1
push constant 0
pop local 1
label WHILE_EXP0
push local 0
not
not
if-goto WHILE_END0
push pointer 0
push this 0
push this 1
call Game.initpix 3
pop temp 0
push pointer 0
call Game.getNeighbour 1
pop temp 0
push pointer 0
call Game.update 1
pop temp 0
push constant 1000
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Game.update 2
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 1
push this 0
call Array.dispose 1
pop temp 0
push this 1
call Array.dispose 1
pop temp 0
label WHILE_EXP0
push local 0
push constant 2048
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 3
add
pop pointer 1
push that 0
push constant 2
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push this 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push constant 64
push local 0
push constant 64
call Math.divide 2
call Math.multiply 2
sub
push constant 8
call Math.multiply 2
push local 0
push constant 64
call Math.divide 2
push constant 8
call Math.multiply 2
push local 0
push constant 64
push local 0
push constant 64
call Math.divide 2
call Math.multiply 2
sub
push constant 8
call Math.multiply 2
push constant 7
add
push local 0
push constant 64
call Math.divide 2
push constant 8
call Math.multiply 2
push constant 7
add
call Screen.drawRectangle 4
pop temp 0
push this 4
push constant 1
sub
pop this 4
label IF_FALSE1
push local 0
push this 3
add
pop pointer 1
push that 0
push constant 1
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push this 3
add
pop pointer 1
push that 0
push constant 4
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push this 2
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push this 0
add
push local 0
push constant 64
push local 0
push constant 64
call Math.divide 2
call Math.multiply 2
sub
push constant 8
call Math.multiply 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push this 1
add
push local 0
push constant 64
call Math.divide 2
push constant 8
call Math.multiply 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE3
label IF_FALSE2
push local 0
push this 3
add
pop pointer 1
push that 0
push constant 3
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
push this 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push constant 64
push local 0
push constant 64
call Math.divide 2
call Math.multiply 2
sub
push constant 8
call Math.multiply 2
push local 0
push constant 64
call Math.divide 2
push constant 8
call Math.multiply 2
push local 0
push constant 64
push local 0
push constant 64
call Math.divide 2
call Math.multiply 2
sub
push constant 8
call Math.multiply 2
push constant 7
add
push local 0
push constant 64
call Math.divide 2
push constant 8
call Math.multiply 2
push constant 7
add
call Screen.drawRectangle 4
pop temp 0
push this 4
push constant 1
sub
pop this 4
label IF_FALSE4
label IF_FALSE0
push local 0
push this 2
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 0
push this 3
add
pop pointer 1
push that 0
push constant 3
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 0
push this 2
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push this 0
add
push local 0
push constant 64
push local 0
push constant 64
call Math.divide 2
call Math.multiply 2
sub
push constant 8
call Math.multiply 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push this 1
add
push local 0
push constant 64
call Math.divide 2
push constant 8
call Math.multiply 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
push constant 64
push local 0
push constant 64
call Math.divide 2
call Math.multiply 2
sub
push constant 8
call Math.multiply 2
push local 0
push constant 64
call Math.divide 2
push constant 8
call Math.multiply 2
push local 0
push constant 64
push local 0
push constant 64
call Math.divide 2
call Math.multiply 2
sub
push constant 8
call Math.multiply 2
push constant 7
add
push local 0
push constant 64
call Math.divide 2
push constant 8
call Math.multiply 2
push constant 7
add
call Screen.drawRectangle 4
pop temp 0
push local 1
push constant 1
add
pop local 1
push this 4
push constant 1
add
pop this 4
label IF_FALSE6
label IF_FALSE5
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 2048
lt
not
if-goto WHILE_END1
push local 1
push this 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
function Game.initpix 2
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 4
lt
not
if-goto WHILE_END0
push local 0
push argument 2
add
pop pointer 1
push that 0
push constant 8
call Math.multiply 2
push local 0
push argument 1
add
pop pointer 1
push that 0
push constant 8
call Math.divide 2
add
pop local 1
push local 1
push this 2
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Game.getNeighbour 11
push argument 0
pop pointer 0
push constant 0
pop local 9
push constant 0
pop local 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 4
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 2
push local 0
push this 1
add
pop pointer 1
push that 0
pop local 3
push local 3
push constant 8
call Math.multiply 2
push local 2
push constant 8
call Math.divide 2
add
pop local 4
push local 4
pop local 6
push constant 0
pop local 10
label WHILE_EXP1
push local 10
not
not
if-goto WHILE_END1
push local 6
push constant 64
sub
pop local 6
push local 6
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 10
push constant 1
pop local 7
label IF_FALSE0
push local 6
push constant 1
neg
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 10
push constant 1
pop local 8
label IF_FALSE1
push local 6
push constant 1
neg
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop local 10
label IF_FALSE2
goto WHILE_EXP1
label WHILE_END1
push local 4
push constant 64
sub
push constant 1
neg
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 4
push constant 64
sub
push this 2
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 1
push constant 1
add
pop local 1
goto IF_END4
label IF_FALSE4
push local 4
push constant 64
sub
push this 3
add
push local 4
push constant 64
sub
push this 3
add
pop pointer 1
push that 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END4
push local 7
push constant 0
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 4
push constant 64
sub
push constant 1
sub
push this 2
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 1
push constant 1
add
pop local 1
goto IF_END6
label IF_FALSE6
push local 4
push constant 64
sub
push constant 1
sub
push this 3
add
push local 4
push constant 64
sub
push constant 1
sub
push this 3
add
pop pointer 1
push that 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END6
label IF_FALSE5
push local 8
push constant 0
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 4
push constant 64
sub
push constant 1
add
push this 2
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 1
push constant 1
add
pop local 1
goto IF_END8
label IF_FALSE8
push local 4
push constant 64
sub
push constant 1
add
push this 3
add
push local 4
push constant 64
sub
push constant 1
add
push this 3
add
pop pointer 1
push that 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END8
label IF_FALSE7
label IF_FALSE3
push local 7
push constant 0
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 4
push constant 1
sub
push this 2
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push local 1
push constant 1
add
pop local 1
goto IF_END10
label IF_FALSE10
push local 4
push constant 1
sub
push this 3
add
push local 4
push constant 1
sub
push this 3
add
pop pointer 1
push that 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END10
label IF_FALSE9
push local 8
push constant 0
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push local 4
push constant 1
add
push this 2
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push local 1
push constant 1
add
pop local 1
goto IF_END12
label IF_FALSE12
push local 4
push constant 1
add
push this 3
add
push local 4
push constant 1
add
push this 3
add
pop pointer 1
push that 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END12
label IF_FALSE11
push local 4
push constant 64
add
push constant 2048
lt
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push local 4
push constant 64
add
push this 2
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push local 1
push constant 1
add
pop local 1
goto IF_END14
label IF_FALSE14
push local 4
push constant 64
add
push this 3
add
push local 4
push constant 64
add
push this 3
add
pop pointer 1
push that 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END14
push local 7
push constant 0
eq
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push local 4
push constant 64
add
push constant 1
sub
push this 2
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push local 1
push constant 1
add
pop local 1
goto IF_END16
label IF_FALSE16
push local 4
push constant 64
add
push constant 1
sub
push this 3
add
push local 4
push constant 64
add
push constant 1
sub
push this 3
add
pop pointer 1
push that 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END16
label IF_FALSE15
push local 8
push constant 0
eq
if-goto IF_TRUE17
goto IF_FALSE17
label IF_TRUE17
push local 4
push constant 64
add
push constant 1
add
push this 2
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE18
goto IF_FALSE18
label IF_TRUE18
push local 1
push constant 1
add
pop local 1
goto IF_END18
label IF_FALSE18
push local 4
push constant 64
add
push constant 1
add
push this 3
add
push local 4
push constant 64
add
push constant 1
add
push this 3
add
pop pointer 1
push that 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END18
label IF_FALSE17
label IF_FALSE13
push local 4
push this 3
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop local 7
push constant 0
pop local 8
push constant 0
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
